<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.portfolio.backend.mapper.UserMapper">

    <!-- ResultMap 정의 -->
    <resultMap id="UserResultMap" type="com.portfolio.backend.dto.UserDto">
        <id property="id" column="id"/>
        <result property="email" column="email"/>
        <result property="name" column="name"/>
        <result property="bio" column="bio"/>
        <result property="profileImage" column="profile_image"/>
        <result property="createdAt" column="created_at"/>
        <result property="updatedAt" column="updated_at"/>
    </resultMap>

    <!-- 모든 사용자 조회 -->
    <select id="findAll" resultMap="UserResultMap">
        SELECT 
            id, email, name, bio, profile_image, created_at, updated_at
        FROM users
        ORDER BY created_at DESC
    </select>

    <!-- ID로 사용자 조회 -->
    <select id="findById" parameterType="long" resultMap="UserResultMap">
        SELECT 
            id, email, name, bio, profile_image, created_at, updated_at
        FROM users
        WHERE id = #{id}
    </select>

    <!-- 이메일로 사용자 조회 -->
    <select id="findByEmail" parameterType="string" resultMap="UserResultMap">
        SELECT 
            id, email, name, bio, profile_image, created_at, updated_at
        FROM users
        WHERE email = #{email}
    </select>

    <!-- 사용자 생성 -->
    <insert id="insert" parameterType="com.portfolio.backend.dto.UserDto" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO users (email, name, bio, profile_image, created_at, updated_at)
        VALUES (#{email}, #{name}, #{bio}, #{profileImage}, NOW(), NOW())
    </insert>

    <!-- 사용자 수정 -->
    <update id="update" parameterType="com.portfolio.backend.dto.UserDto">
        UPDATE users
        SET 
            name = #{name},
            bio = #{bio},
            profile_image = #{profileImage},
            updated_at = NOW()
        WHERE id = #{id}
    </update>

    <!-- 사용자 삭제 -->
    <delete id="deleteById" parameterType="long">
        DELETE FROM users WHERE id = #{id}
    </delete>

    <!-- 이메일 존재 여부 확인 -->
    <select id="existsByEmail" parameterType="string" resultType="boolean">
        SELECT COUNT(*) > 0 FROM users WHERE email = #{email}
    </select>

    <!-- 사용자 수 조회 -->
    <select id="count" resultType="int">
        SELECT COUNT(*) FROM users
    </select>

</mapper>
